{"version":3,"sources":["db.js","app.js","index.js"],"names":["Pool","require","pool","user","host","database","password","port","module","exports","express","cors","html","app","use","origin","json","urlencoded","extended","get","req","res","set","status","send","convertQueryToString","el","flat","map","v","join","search","minPrice","maxPrice","state","category","startDate","endDate","query","result","rows","err","error","message","listen","console","log"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const { Pool } = require(\"pg\");\n\nconst pool = new Pool({\n  user: \"admin\",\n  host: \"localhost\",\n  database: \"capyborrow-db\",\n  password: \"admin\",\n  port: 5432,\n});\n\nmodule.exports = pool;\n","const express = require('express');\r\nconst cors = require('cors');\r\nconst pool = require('./db');\r\n\r\nconst html = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <title>A JavaScript project</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n</head>\r\n<body>\r\n  <h1>A JavaScript project</h1>\r\n</body>\r\n</html>`;\r\n\r\nconst app = express();\r\n\r\napp.use(cors({origin: \"http://localhost:3000\"}));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n\r\napp.get('/', (req, res) => {\r\n  res.set('Content-Type', 'text/html');\r\n  res.status(200).send(html);\r\n});\r\n\r\n/*USER*/\r\n\r\n\r\n/*ITEM*/\r\n\r\nconst convertQueryToString = (el) => {\r\n  if(typeof el === \"string\") {\r\n    el = `'${el}'`;\r\n  }\r\n  else if(typeof el === \"object\") {\r\n    el = el.flat().map(v => `'${v}'`).join(\", \");\r\n  }\r\n  return el;\r\n}\r\n\r\napp.get('/item', async (req,res) => {\r\n  //nique sa mère on verra demain\r\n  let {search, minPrice, maxPrice, state, category, startDate, endDate} = req.query;\r\n\r\n  state = convertQueryToString(state);\r\n  category = convertQueryToString(category);\r\n  startDate = convertQueryToString(startDate);\r\n  endDate = convertQueryToString(endDate);\r\n\r\n  try {\r\n    const result = await pool.query(`\r\n      SELECT *\r\n      FROM Capyborrow.all_items_display AS i\r\n      WHERE ($1::text IS NULL OR i.name ILIKE '%' || $1 || '%')\r\n        AND ($2::int  IS NULL OR i.price >= $2)\r\n        AND ($3::int  IS NULL OR i.price <= $3)\r\n        AND ((${state || null}) IS NULL OR i.state IN (${state || null}))\r\n        AND ((${category || null}) IS NULL OR i.category1 IN (${category || null}))\r\n        AND ((${startDate || null}) IS NULL OR i.start_date <= (${startDate || null}))\r\n        AND ((${endDate || null}) IS NULL OR i.end_date >= (${endDate || null}))\r\n        `, [search || null, minPrice || null, maxPrice || null]);\r\n    res.json(result.rows);\r\n  } catch (err) {\r\n    res.status(500).json({error: err.message});\r\n  }\r\n});\r\n\r\n//post pour créer un item\r\n\r\nmodule.exports = app;","const app = require('./app');\r\n\r\nconst port = '8888';\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}