{"version":3,"sources":["db.js","app.js","index.js"],"names":["Pool","require","pool","user","host","database","password","port","module","exports","express","cors","html","app","use","origin","json","urlencoded","extended","get","req","res","set","status","send","result","query","rows","err","error","message","post","email","username","body","put","id","params","fname","lname","convertQueryToString","el","newel","flat","map","v","join","search","minPrice","maxPrice","state","category","startDate","endDate","listen","console","log"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const { Pool } = require(\"pg\");\n\nconst pool = new Pool({\n  user: \"admin\",\n  host: \"localhost\",\n  database: \"capyborrow-db\",\n  password: \"admin\",\n  port: 5432,\n});\n\nmodule.exports = pool;\n","/* eslint-disable prefer-const */\nconst express = require('express');\nconst cors = require('cors');\nconst pool = require('./db');\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <title>A JavaScript project</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n  <h1>A JavaScript project</h1>\n</body>\n</html>`;\n\nconst app = express();\n\napp.use(cors({ origin: 'http://localhost:3000' }));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.get('/', (req, res) => {\n  res.set('Content-Type', 'text/html');\n  res.status(200).send(html);\n});\n\n/* USER */\napp.get('/users', async (req, res) => {\n  try {\n    const result = await pool.query('SELECT * FROM capyborrow.user');\n    res.json(result.rows);\n  } catch (err) {\n    res.status(500).json({ error: err.message });\n  }\n});\n\napp.post('/users', async (req, res) => {\n  const { email, username } = req.body;\n  try {\n    const result = await pool.query(`INSERT INTO Capyborrow.user(email, username)\n                                      VALUES($1, $2)`, [email, username]);\n    if (!result.rows[0]) {\n      return res.status(500).json({ error: 'Utilisateur non créé' });\n    }\n    res.status(201).json(result.rows[0]);\n  } catch (err) {\n    res.status(500).json({ error: err.message });\n  }\n\n  return null;\n});\n\napp.put('/users/:id', async (req, res) => {\n  const { id } = req.params;\n  const { username, fname, lname } = req.body;\n  try {\n    const result = await pool.query(`UPDATE Capyborrow.user\n                                      SET username = $1,\n                                          firstname = $2,\n                                          lastname = $3\n                                      WHERE user_id = $4\n                                      RETURNING *;`, [username, fname, lname, id]);\n    if (!result.rows[0]) {\n      return res.status(404).json({ error: 'Utilisateur introuvable' });\n    }\n    res.status(200).json(result.rows[0]);\n  } catch (err) {\n    res.status(500).json({ error: err.message });\n  }\n  return null;\n});\n\n/* ITEM */\n\nconst convertQueryToString = (el) => {\n  let newel = el;\n  if (typeof newel === 'string') {\n    newel = `'${newel}'`;\n  } else if (typeof newel === 'object') {\n    newel = newel.flat().map((v) => `'${v}'`).join(', ');\n  }\n  return el;\n};\n\napp.get('/item', async (req, res) => {\n  let {\n    search, minPrice, maxPrice, state, category, startDate, endDate,\n  } = req.query;\n\n  state = convertQueryToString(state);\n  category = convertQueryToString(category);\n  startDate = convertQueryToString(startDate);\n  endDate = convertQueryToString(endDate);\n\n  try {\n    const result = await pool.query(`SELECT *\n                                      FROM Capyborrow.all_items_display AS i\n                                      WHERE ($1::text IS NULL OR i.name ILIKE '%' || $1 || '%')\n                                        AND ($2::int  IS NULL OR i.price >= $2)\n                                        AND ($3::int  IS NULL OR i.price <= $3)\n                                        AND ((${state || null}) IS NULL OR i.state IN (${state || null}))\n                                        AND ((${category || null}) IS NULL OR i.category1 IN (${category || null}))\n                                        AND ((${startDate || null}) IS NULL OR i.start_date <= (${startDate || null}))\n                                        AND ((${endDate || null}) IS NULL OR i.end_date >= (${endDate || null}))\n                                        `, [search || null, minPrice || null, maxPrice || null]);\n    res.json(result.rows);\n  } catch (err) {\n    res.status(500).json({ error: err.message });\n  }\n});\n\n// post pour créer un item\n\nmodule.exports = app;\n","const app = require('./app');\r\n\r\nconst port = '8888';\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}